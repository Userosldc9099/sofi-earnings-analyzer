import os
import requests
from datetime import datetime
from openai import OpenAI
from utils.report_loader import get_sofi_report_text
from utils.telegram import send_telegram

openai_api_key = os.getenv("OPENAI_API_KEY")

def build_prompt(report_text):
    return f"""
–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç SoFi (SOFI):

{report_text[:4000]}

1. –ü—Ä–µ–≤–∑–æ—à–ª–∞ –ª–∏ SoFi –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ EPS –∏ –≤—ã—Ä—É—á–∫–µ?
2. –£–ª—É—á—à–∏–ª–∏—Å—å –ª–∏ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –∫–≤–∞—Ä—Ç–∞–ª–æ–º?
3. –ö–∞–∫ –æ—Ü–µ–Ω–∏—Ç—å guidance? –õ—É—á—à–µ / —Ö—É–∂–µ / –≤ —Ä–∞–º–∫–∞—Ö?
4. –ï—Å—Ç—å –ª–∏ —Ç—Ä–µ–≤–æ–∂–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã, —Ä–∏—Å–∫–∏ –∏–ª–∏ —Å—é—Ä–ø—Ä–∏–∑—ã?
5. –í—ã–≤–æ–¥: –ø–æ–∫—É–ø–∞—Ç—å, –¥–µ—Ä–∂–∞—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –∞–∫—Ü–∏–∏? –û–±—ä—è—Å–Ω–∏ —Ä–µ—à–µ–Ω–∏–µ.
"""

def analyze_report():
    print("üîç STARTING analyze_report")

    report_text = get_sofi_report_text()
    print("üìù –ó–∞–≥—Ä—É–∑–∏–ª–∏ –æ—Ç—á—ë—Ç:", report_text[:100])

    if not report_text or len(report_text.strip()) < 20:
        print("‚ùå –ü—É—Å—Ç–æ–π –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç –æ—Ç—á—ë—Ç–∞")
        send_telegram("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç SoFi.")
        return

    prompt = build_prompt(report_text)
    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ OpenAI...")
    
    try:
        client = OpenAI(api_key=openai_api_key)
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.3
        )
        result = response.choices[0].message.content
        print("‚úÖ –û—Ç–≤–µ—Ç GPT –ø–æ–ª—É—á–µ–Ω:", result[:200])
        send_telegram(f"üìä SoFi Earnings ({datetime.today().date()}):\n{result}")

    except Exception as e:
        print("üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI:", str(e))
        send_telegram(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å OpenAI API: {str(e)}")

if __name__ == "__main__":
    analyze_report()
